# Generated by Django 4.0.1 on 2022-02-10 22:40

import django.contrib.postgres.fields
import django.utils.timezone
import model_utils.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Newsletter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("email", models.EmailField(max_length=254)),
                ("verified", models.BooleanField(default=False)),
                (
                    "weekday",
                    models.CharField(
                        choices=[
                            ("MONDAY", "Monday"),
                            ("TUESDAY", "Tuesday"),
                            ("WEDNESDAY", "Wednesday"),
                            ("THURSDAY", "Thursday"),
                            ("FRIDAY", "Friday"),
                            ("SATURDAY", "Saturday"),
                            ("SUNDAY", "Sunday"),
                        ],
                        default="THURSDAY",
                        help_text="The weekday on which the newsletter will be sent",
                        max_length=50,
                    ),
                ),
                ("min_thread_score", models.PositiveSmallIntegerField()),
                (
                    "max_threads_count",
                    models.PositiveSmallIntegerField(
                        choices=[("3", "Three"), ("5", "Five"), ("10", "Ten")],
                        default="5",
                        help_text="Max number of threads per single tag",
                    ),
                ),
                ("slug", models.SlugField(max_length=250)),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=80), size=None
                    ),
                ),
                (
                    "domens",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=80), size=None
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="Thread",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "thread_id",
                    models.PositiveBigIntegerField(help_text="hackernews thread id", unique=True),
                ),
                ("link", models.URLField(max_length=700)),
                ("title", models.CharField(max_length=100)),
                ("score", models.IntegerField(null=True)),
                ("comments_count", models.IntegerField(null=True)),
                ("comments_link", models.URLField(max_length=250, null=True)),
            ],
            options={
                "ordering": ["-score"],
            },
        ),
    ]
